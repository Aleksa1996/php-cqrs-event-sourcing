services:

# ---------------------------------------------------------------------------- #
#                                 Proxy                                        #
# ---------------------------------------------------------------------------- #
    proxy:
        container_name: proxy
        image: traefik:v3.0.0
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        command: 
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        restart: unless-stopped
        networks:
            - main_net
# ---------------------------------------------------------------------------- #
#                                 DB                                           #
# ---------------------------------------------------------------------------- #
    postgres:
        container_name: postgres
        image: postgres:13.15-bookworm
        volumes:
            - ./.docker/persistence/postgres:/var/lib/postgresql/data
        restart: unless-stopped
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        networks:
            - main_net
# ---------------------------------------------------------------------------- #
#                                 DB                                           #
# ---------------------------------------------------------------------------- #
    mongo:
        container_name: mongo
        image: mongo:7.0.9-jammy
        volumes:
            - ./.docker/persistence/mongo:/data/db
        restart: unless-stopped
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
        networks:
            - main_net
# ---------------------------------------------------------------------------- #
#                                 MinIO                                        #
# ---------------------------------------------------------------------------- #
    minio:
        container_name: minio
        image: minio/minio
        volumes:
            - ./.docker/persistence/minio:/data
        command: "server /data --console-address ':9001'"
        restart: unless-stopped
        networks:
            - main_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.minio.entrypoints=web"
            - "traefik.http.routers.minio.rule=Host(`minio.local`)"
            - "traefik.http.routers.minio.service=minio"
            - "traefik.http.services.minio.loadbalancer.server.port=9001"
# ---------------------------------------------------------------------------- #
#                                 DB UI                                        #
# ---------------------------------------------------------------------------- #
    adminer:
        container_name: adminer
        image: dockette/adminer:full
        restart: unless-stopped
        networks:
            - main_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.adminer.entrypoints=web"
            - "traefik.http.routers.adminer.rule=Host(`adminer.local`)"
            - "traefik.http.routers.adminer.service=adminer"
            - "traefik.http.services.adminer.loadbalancer.server.port=80"
# ---------------------------------------------------------------------------- #
#                            Message broker                                    #
# ---------------------------------------------------------------------------- #
    message-broker:
        container_name: message-broker
        image: rabbitmq:3.12.14-management-alpine
        restart: unless-stopped
        environment:
            - RABBITMQ_DEFAULT_USER=root
            - RABBITMQ_DEFAULT_PASS=root
        networks:
            - main_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.message-broker.entrypoints=web"
            - "traefik.http.routers.message-broker.rule=Host(`message-broker.local`)"
            - "traefik.http.routers.message-broker.service=message-broker"
            - "traefik.http.services.message-broker.loadbalancer.server.port=15672"
# ---------------------------------------------------------------------------- #
#                                 Catalog                                      #
# ---------------------------------------------------------------------------- #
    catalog-service:
        container_name: catalog-service
        image: local-build/catalog-service
        build:
            context: ./service/catalog
            dockerfile: Dockerfile
        volumes:
            - ./service/catalog:/var/www/html
        restart: unless-stopped
        networks:
            - main_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.catalog-service.entrypoints=web"
            - "traefik.http.routers.catalog-service.rule=Host(`catalog-service.local`)"
            - "traefik.http.routers.catalog-service.service=catalog-service"
            - "traefik.http.services.catalog-service.loadbalancer.server.port=80"
# ---------------------------------------------------------------------------- #
#                                 Prometheus                                   #
# ---------------------------------------------------------------------------- #
    prometheus:
        container_name: prometheus
        image: prom/prometheus
        restart: unless-stopped
        networks:
            - main_net
        volumes:
            - ./.docker/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./.docker/config/prometheus/alert.rules:/etc/prometheus/alert.rules
            - ./.docker/persistence/prometheus:/prometheus
        command:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
            - --web.enable-lifecycle
            - --web.enable-admin-api
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prometheus.entrypoints=web"
            - "traefik.http.routers.prometheus.rule=Host(`prometheus.local`)"
            - "traefik.http.routers.prometheus.service=prometheus"
            - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
# ---------------------------------------------------------------------------- #
#                                 Alert manager                                #
# ---------------------------------------------------------------------------- #
    alertmanager:
        container_name: alertmanager
        image: prom/alertmanager
        restart: unless-stopped
        networks:
            - main_net
        volumes:
            - ./.docker/config/alertmanager/config.yml:/etc/alertmanager/config.yml
            - ./.docker/persistence/alertmanager:/alertmanager
        command:
            - --config.file=/etc/alertmanager/config.yml
            - --storage.path=/alertmanager
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.alertmanager.entrypoints=web"
            - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.local`)"
            - "traefik.http.routers.alertmanager.service=alertmanager"
            - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
# ---------------------------------------------------------------------------- #
#                                 Grafana                                      #
# ---------------------------------------------------------------------------- #
    grafana:
        container_name: grafana
        image: grafana/grafana
        restart: unless-stopped
        networks:
            - main_net
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin123
            - GF_USERS_ALLOW_SIGN_UP=false
        volumes:
            - ./.docker/persistence/grafana:/var/lib/grafana
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.entrypoints=web"
            - "traefik.http.routers.grafana.rule=Host(`grafana.local`)"
            - "traefik.http.routers.grafana.service=grafana"
            - "traefik.http.services.grafana.loadbalancer.server.port=3000"
# ---------------------------------------------------------------------------- #
#                                 Node exporter                                #
# ---------------------------------------------------------------------------- #
    node-exporter:
        container_name: node-exporter
        image: prom/node-exporter
        restart: unless-stopped
        networks:
            - main_net
        # volumes:
        #     - /proc:/host/proc:ro
        #     - /sys:/host/sys:ro
        #     - /:/rootfs:ro
        # command:
        #     - --path.procfs=/host/proc
        #     - --path.sysfs=/host/sys
        #     - --collector.filesystem.ignored-mount-points
        #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
# ---------------------------------------------------------------------------- #
#                                 Cadvisor                                     #
# ---------------------------------------------------------------------------- #
    cadvisor:
        container_name: cadvisor
        image: google/cadvisor
        restart: unless-stopped
        networks:
            - main_net
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
            - /mnt/windows_docker/:/rootfs/var/lib/docker:ro
        privileged: true
# ---------------------------------------------------------------------------- #
#                                 Network                                      #
# ---------------------------------------------------------------------------- #
networks:
    main_net:
        ipam:
            driver: default
            config:
                - subnet: 172.16.240.0/24